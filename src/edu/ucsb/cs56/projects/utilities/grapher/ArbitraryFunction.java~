package edu.ucsb.cs56.projects.utilities.grapher;
import java.util.*;
import javax.script.*;
import java.lang.Character;
/**
   A class that represents an arbitrary function that is given by a String.
   @author Jenny So
   @version CS56, W14, Project
*/
public class ArbitraryFunction extends ArrayList<Term> implements FunctionR1R1 {
    char var;
    String exp;
    
    /**
       Creates a new object based on the given expression.
       @param expression the expression to evaluate the function with.
       @param indVar the independent variable in the expression (i.e. 'x').
    */
    public ArbitraryFunction(String expression, char indVar) {
	exp = removeWhitespace(expression);
	var = indVar;
	String temp = "";
	int k =0;
	
	for(String s: exp.split("\\+\\-"))
	    this.add(new Term(s));

	String[] n = exp.split("\\-");

	// Special Case
	if(!exp.substring(0,1).equals("-"))
	    k = 1;

	// Running through array
	for(int j=k; j<n.length; j++){
	    // Running through string
	    for(int i =0; i<n[j].length(); i++){
		// Get the first term of the string
		if(n[j].charAt(i) == '+')
		    break;
		temp += n[j].substring(i,i+1);
	    }
	    // Find the term in the arraylist
	    int index = this.indexOf(new Term(temp));
	    // Turn to negative
	    this.get(index).toNegative();
	}
	
    }

    public static String removeWhitespace(String str) {
	str = str.trim();
	char[] s = str.toCharArray();
	int removed = 0;
	for (int i = 0; i < str.length(); i++) {
	    if (s[i] == ' ') {
		removed++;
		s[i] = s[i+1];
	    }
	}
	return new String(s, 0, str.length() - removed);
    }
    
    public double evaluate(double indVar) {
        int sum = 0;
	for (int i = 0; i<this.size(); i++) {
	    sum += this.get(i).evaluate(indVar);
	}
	return sum;
    }
    
    public boolean isInDomain(double arg) {
	return true;
    }
    
    public String toString() {
        return exp;
    }
      

}
